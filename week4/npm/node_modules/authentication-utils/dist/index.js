"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTokenFromHeaders = getTokenFromHeaders;
exports.generateAccessToken = generateAccessToken;
exports.getRandomNumberString = getRandomNumberString;
exports.paginate = paginate;
/**
 * Extracts a token from the authorization header if it exists.
 *
 * @param {Object} headers - The headers object containing the authorization header.
 * @param {any} headers.authorization - The authorization header containing the token.
 * @return {string|null} The extracted token or null if the authorization header is not present.
 */
function getTokenFromHeaders(headers) {
    const authHeader = headers['authorization'];
    return authHeader ? authHeader.replace('Bearer ', '') : null;
}
function generateAccessToken(payload, jwt) {
    return jwt.signAsync(payload, { expiresIn: '1h' });
}
function getRandomNumberString(length) {
    let result = '';
    const characters = '0123456789';
    const charactersLength = characters.length;
    for (let i = 0; i < length; i++)
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    return result;
}
function paginate(page = 1, limit = 25, totalItems) {
    const take = limit > 0 ? +limit : 10;
    const skip = page > 1 ? (page - 1) * take : 0;
    const totalPages = Math.ceil(totalItems / take);
    const previousPage = page > 1 ? page - 1 : null;
    const nextPage = +page < +totalPages ? +page + 1 : null;
    return { skip, take, previousPage, nextPage, totalPages };
}
//# sourceMappingURL=index.js.map